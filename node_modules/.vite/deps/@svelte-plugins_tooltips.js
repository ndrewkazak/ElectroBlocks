import "./chunk-X7HCJ7ZS.js";
import "./chunk-T5R7REFH.js";
import {
  HtmlTagHydration,
  SvelteComponentDev,
  add_location,
  append_styles,
  attr_dev,
  binding_callbacks,
  check_outros,
  children,
  claim_element,
  claim_html_tag,
  claim_space,
  create_slot,
  detach_dev,
  dispatch_dev,
  element,
  empty,
  get_all_dirty_from_scope,
  get_slot_changes,
  group_outros,
  init,
  insert_hydration_dev,
  listen_dev,
  noop,
  onDestroy,
  onMount,
  safe_not_equal,
  set_style,
  space,
  toggle_class,
  transition_in,
  transition_out,
  update_slot_base,
  validate_slots
} from "./chunk-THMM2GOZ.js";
import "./chunk-2GO3ANTR.js";
import "./chunk-LNEMQRCO.js";

// node_modules/@svelte-plugins/tooltips/dist/helpers.js
var formatVariableKey = (str) => {
  return str.replace(/-_$/g, "").replace(/([a-z0-9])([A-Z])/g, "$1-$2").replace(/([A-Z])([A-Z])(?=[a-z])/g, "$1-$2").toLowerCase();
};
var getMinWidth = (element2, maxWidth) => {
  const extraCharPadding = 2;
  const elementWidth = element2.getBoundingClientRect().width + extraCharPadding;
  const elementStyle = window.getComputedStyle(element2);
  const elementPaddingLeft = parseInt(
    elementStyle.getPropertyValue("padding-left"),
    10
  );
  const elementPaddingRight = parseInt(
    elementStyle.getPropertyValue("padding-right"),
    10
  );
  const elementPadding = elementPaddingLeft + elementPaddingRight;
  const contentWidth = elementWidth - elementPadding;
  return Math.round(Math.min(maxWidth, contentWidth || maxWidth));
};
var isElementInViewport = (element2, container = null, position) => {
  const rect = element2.getBoundingClientRect();
  const viewportWidth = window.innerWidth || document.documentElement.clientWidth;
  const viewportHeight = window.innerHeight || document.documentElement.clientHeight;
  let isInsideViewport = rect.bottom > 0 && rect.top < viewportHeight && rect.right > 0 && rect.left < viewportWidth;
  if (container) {
    const containerRect = container.getBoundingClientRect();
    if (position === "top" || position === "bottom") {
      isInsideViewport = containerRect.bottom + containerRect.height < viewportHeight && containerRect.top < viewportHeight;
    } else {
      isInsideViewport = containerRect.right + containerRect.width < viewportWidth && containerRect.left < viewportWidth;
    }
    return isInsideViewport;
  }
  return isInsideViewport;
};
var computeTooltipPosition = (containerRef, tooltipRef, position, coords) => {
  if (!containerRef || !tooltipRef) {
    return coords;
  }
  const tooltipRect = tooltipRef.getBoundingClientRect();
  const containerRect = containerRef.getBoundingClientRect();
  const containerPosition = window.getComputedStyle(containerRef).position;
  const containerStyle = window.getComputedStyle(containerRef);
  let cumulativeOffsetTop = 0;
  let cumulativeOffsetLeft = 0;
  let fixedOffsetTop = 0;
  let stickyOffsetTop = 0;
  let fixedOffsetLeft = 0;
  let currentElement = containerRef;
  while (currentElement && currentElement !== document.body) {
    const computedStyle = window.getComputedStyle(currentElement);
    const elementPosition = computedStyle.position;
    const currentRect = currentElement.getBoundingClientRect();
    if (elementPosition === "fixed") {
      fixedOffsetTop += currentRect.top + window.scrollY;
      fixedOffsetLeft += currentRect.left + window.scrollX;
    } else if (elementPosition === "sticky") {
      stickyOffsetTop += currentRect.top;
      fixedOffsetLeft += currentRect.left + window.scrollX;
    } else if (elementPosition === "absolute" || elementPosition === "relative") {
      if (elementPosition === "absolute") {
        cumulativeOffsetTop -= parseFloat(computedStyle.top) || 0;
        cumulativeOffsetLeft -= parseFloat(computedStyle.left) || 0;
      }
      if (elementPosition === "relative") {
        cumulativeOffsetTop -= currentElement.offsetTop;
        cumulativeOffsetLeft -= currentElement.offsetLeft;
        if (position === "bottom") {
          cumulativeOffsetTop += containerRect.height;
        }
        if (position === "right") {
          cumulativeOffsetLeft -= containerRect.width;
        }
        if (containerPosition === "absolute") {
          if (position === "right") {
            cumulativeOffsetLeft += containerRect.width;
          }
        }
      }
    }
    const transform = computedStyle.transform;
    if (transform && transform !== "none") {
      const transformMatrix = new DOMMatrix(transform);
      if (elementPosition === "relative" || elementPosition === "absolute") {
        cumulativeOffsetTop -= transformMatrix.m42;
        cumulativeOffsetLeft -= transformMatrix.m41;
      } else {
        cumulativeOffsetTop -= currentElement.offsetTop + transformMatrix.m42;
        cumulativeOffsetLeft -= currentElement.offsetLeft + transformMatrix.m41;
      }
    }
    currentElement = currentElement.parentElement;
  }
  let finalTop = containerRect.top + cumulativeOffsetTop + stickyOffsetTop - fixedOffsetTop;
  let finalLeft = containerRect.left + cumulativeOffsetLeft - fixedOffsetLeft;
  switch (position) {
    case "top":
      coords.top = finalTop;
      coords.left = finalLeft + containerRect.width / 2;
      break;
    case "bottom":
      coords.top = finalTop - tooltipRect.height;
      coords.left = finalLeft + containerRect.width / 2;
      break;
    case "left":
      coords.left = finalLeft;
      coords.top = finalTop + containerRect.height / 2;
      break;
    case "right":
      coords.left = finalLeft + containerRect.width - tooltipRect.width;
      coords.top = finalTop + containerRect.height / 2;
      break;
  }
  coords.top += window.scrollY;
  coords.left += window.scrollX;
  return coords;
};

// node_modules/@svelte-plugins/tooltips/dist/constants.js
var inverse = {
  left: "right",
  right: "left",
  top: "bottom",
  bottom: "top"
};

// node_modules/@svelte-plugins/tooltips/dist/tooltip.svelte
var file = "node_modules\\@svelte-plugins\\tooltips\\dist\\tooltip.svelte";
function add_css(target) {
  append_styles(target, "svelte-1xktviv", ":root{--tooltip-arrow-size:10px;--tooltip-background-color:rgba(0, 0, 0, 0.9);--tooltip-border-radius:4px;--tooltip-box-shadow:0 1px 20px rgba(0, 0, 0, 0.25);--tooltip-font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,\n      Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif;--tooltip-font-size:14px;--tooltip-font-weight:500;--tooltip-line-height:1.25rem;--tooltip-color:#fff;--tooltip-offset-x:0px;--tooltip-offset-y:0px;--tooltip-padding:12px;--tooltip-pointer-events:none;--tooltip-white-space-hidden:nowrap;--tooltip-white-space-shown:normal;--tooltip-z-index:100}.tooltip.svelte-1xktviv{background-color:var(--tooltip-background-color);box-shadow:var(--tooltip-box-shadow);border-radius:var(--tooltip-border-radius);color:var(--tooltip-color);opacity:0;font-family:var(--tooltip-font-family);font-size:var(--tooltip-font-size);font-style:normal;font-weight:var(--tooltip-font-weight);line-height:var(--tooltip-line-height);padding:var(--tooltip-padding);pointer-events:var(--tooltip-pointer-events);position:absolute;text-align:left;visibility:hidden;white-space:var(--tooltip-white-space-hidden);z-index:var(--tooltip-z-index)}.tooltip.show.svelte-1xktviv{opacity:1;visibility:visible;white-space:var(--tooltip-white-space-shown)}.tooltip.bottom.svelte-1xktviv:after,.tooltip.left.svelte-1xktviv:after,.tooltip.right.svelte-1xktviv:after,.tooltip.top.svelte-1xktviv:after{border:var(--tooltip-arrow-size) solid var(--tooltip-background-color);content:' ';position:absolute}.tooltip.arrowless.svelte-1xktviv:after{border:0 !important}.tooltip.bottom.svelte-1xktviv,.tooltip.top.svelte-1xktviv{--tooltip-offset-x:0px;--tooltip-offset-y:12px}.tooltip.left.svelte-1xktviv,.tooltip.right.svelte-1xktviv{--tooltip-offset-x:12px;--tooltip-offset-y:0px}.tooltip.bottom.svelte-1xktviv{bottom:0;left:50%;transform:translate(\n      calc(-50% + var(--tooltip-offset-x)),\n      calc(100% + var(--tooltip-offset-y))\n    )}.tooltip.bottom.svelte-1xktviv:after{border-color:transparent transparent var(--tooltip-background-color);left:50%;top:0;transform:translate(-50%, -99%)}.tooltip.top.svelte-1xktviv{left:50%;top:0;transform:translate(\n      calc(-50% + var(--tooltip-offset-x)),\n      calc(-100% - var(--tooltip-offset-y))\n    )}.tooltip.top.svelte-1xktviv:after{border-color:var(--tooltip-background-color) transparent transparent\n      transparent;bottom:0;left:50%;transform:translate(-50%, 99%)}.tooltip.left.svelte-1xktviv{left:0;top:50%;transform:translate(\n      calc(-100% - var(--tooltip-offset-x)),\n      calc(-50% - var(--tooltip-offset-y))\n    )}.tooltip.left.svelte-1xktviv:after{border-color:transparent transparent transparent\n      var(--tooltip-background-color);right:0;top:50%;transform:translate(99%, -50%)}.tooltip.right.svelte-1xktviv{right:0;top:50%;transform:translate(\n      calc(100% + var(--tooltip-offset-x)),\n      calc(-50% - var(--tooltip-offset-y))\n    )}.tooltip.right.svelte-1xktviv:after{border-color:transparent var(--tooltip-background-color) transparent\n      transparent;left:0;top:50%;transform:translate(-99%, -50%)}.tooltip.animation-fade.svelte-1xktviv{opacity:0;transition:opacity 0.25s ease-in-out}.tooltip.animation-fade.show.svelte-1xktviv{opacity:1}.tooltip.top.animation-slide.svelte-1xktviv{margin-top:10px;opacity:0;transition:opacity 0.25s ease-in-out,\n      margin 0.25s ease-in-out}.tooltip.top.animation-slide.show.svelte-1xktviv{margin-top:0;opacity:1}.tooltip.bottom.animation-slide.svelte-1xktviv{margin-bottom:20px;opacity:0;transition:opacity 0.25s ease-in-out,\n      margin 0.25s ease-in-out}.tooltip.bottom.animation-slide.show.svelte-1xktviv{margin-bottom:0;opacity:1}.tooltip.right.animation-slide.svelte-1xktviv{margin-right:20px;opacity:0;transition:opacity 0.25s ease-in-out,\n      margin 0.25s ease-in-out}.tooltip.right.animation-slide.show.svelte-1xktviv{margin-right:0;opacity:1}.tooltip.left.animation-slide.svelte-1xktviv{margin-left:20px;opacity:0;transition:opacity 0.25s ease-in-out,\n      margin 0.25s ease-in-out}.tooltip.left.animation-slide.show.svelte-1xktviv{margin-left:0;opacity:1}.tooltip.left.animation-puff.svelte-1xktviv{filter:blur(2px);opacity:0;transform:translate(\n        calc(-100% - var(--tooltip-offset-x)),\n        calc(-50% - var(--tooltip-offset-y))\n      )\n      scale(2, 2);transform-origin:50% 50%;transition:opacity 0.25s ease-in-out,\n      filter 0.25s ease-in-out,\n      transform 0.25s ease-in-out}.tooltip.left.animation-puff.show.svelte-1xktviv{filter:blur(0);opacity:1;transform:translate(\n        calc(-100% - var(--tooltip-offset-x)),\n        calc(-50% - var(--tooltip-offset-y))\n      )\n      scale(1, 1)}.tooltip.right.animation-puff.svelte-1xktviv{filter:blur(2px);opacity:0;transform:translate(\n        calc(100% + var(--tooltip-offset-x)),\n        calc(-50% - var(--tooltip-offset-y))\n      )\n      scale(2, 2);transform-origin:50% 50%;transition:opacity 0.25s ease-in-out,\n      filter 0.25s ease-in-out,\n      transform 0.25s ease-in-out}.tooltip.right.animation-puff.show.svelte-1xktviv{filter:blur(0);opacity:1;transform:translate(\n        calc(100% + var(--tooltip-offset-x)),\n        calc(-50% - var(--tooltip-offset-y))\n      )\n      scale(1, 1)}.tooltip.top.animation-puff.svelte-1xktviv{filter:blur(2px);opacity:0;transform:translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(-100% - var(--tooltip-offset-y))\n      )\n      scale(2, 2);transform-origin:50% 50%;transition:opacity 0.25s ease-in-out,\n      filter 0.25s ease-in-out,\n      transform 0.25s ease-in-out}.tooltip.top.animation-puff.show.svelte-1xktviv{filter:blur(0);opacity:1;transform:translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(-100% - var(--tooltip-offset-y))\n      )\n      scale(1, 1)}.tooltip.bottom.animation-puff.svelte-1xktviv{filter:blur(2px);opacity:0;transform:translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(100% + var(--tooltip-offset-y))\n      )\n      scale(2, 2);transform-origin:50% 50%;transition:opacity 0.25s ease-in-out,\n      filter 0.25s ease-in-out,\n      transform 0.25s ease-in-out}.tooltip.bottom.animation-puff.show.svelte-1xktviv{filter:blur(0);opacity:1;transform:translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(100% + var(--tooltip-offset-y))\n      )\n      scale(1, 1)}.tooltip.left.animation-bounce.svelte-1xktviv{opacity:0;transform:translate(\n        calc(-100% - var(--tooltip-offset-x)),\n        calc(-50% + var(--tooltip-offset-y))\n      )\n      scale(1.2, 1.2);transform-origin:50% 50%;transition:opacity 0.25s ease-in-out,\n      transform 0.25s cubic-bezier(0.5, -1, 0.5, 3)}.tooltip.left.animation-bounce.show.svelte-1xktviv{opacity:1;transform:translate(\n        calc(-100% - var(--tooltip-offset-x)),\n        calc(-50% + var(--tooltip-offset-y))\n      )\n      scale(1, 1)}.tooltip.right.animation-bounce.svelte-1xktviv{opacity:0;transform:translate(\n        calc(100% + var(--tooltip-offset-x)),\n        calc(-50% + var(--tooltip-offset-y))\n      )\n      scale(1.2, 1.2);transform-origin:50% 50%;transition:opacity 0.25s ease-in-out,\n      transform 0.25s cubic-bezier(0.5, -1, 0.5, 3)}.tooltip.right.animation-bounce.show.svelte-1xktviv{opacity:1;transform:translate(\n        calc(100% + var(--tooltip-offset-x)),\n        calc(-50% + var(--tooltip-offset-y))\n      )\n      scale(1, 1)}.tooltip.top.animation-bounce.svelte-1xktviv{opacity:0;transform:translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(-100% - var(--tooltip-offset-y))\n      )\n      scale(1.2, 1.2);transform-origin:50% 50%;transition:opacity 0.25s ease-in-out,\n      transform 0.25s cubic-bezier(0.5, -1, 0.5, 3)}.tooltip.top.animation-bounce.show.svelte-1xktviv{opacity:1;transform:translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(-100% - var(--tooltip-offset-y))\n      )\n      scale(1, 1)}.tooltip.bottom.animation-bounce.svelte-1xktviv{opacity:0;transform:translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(100% + var(--tooltip-offset-y))\n      )\n      scale(1.2, 1.2);transform-origin:50% 50%;transition:opacity 0.25s ease-in-out,\n      transform 0.25s cubic-bezier(0.5, -1, 0.5, 3)}.tooltip.bottom.animation-bounce.show.svelte-1xktviv{opacity:1;transform:translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(100% + var(--tooltip-offset-y))\n      )\n      scale(1, 1)}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
}
function create_else_block(ctx) {
  let current;
  const default_slot_template = (
    /*#slots*/
    ctx[22].default
  );
  const default_slot = create_slot(
    default_slot_template,
    ctx,
    /*$$scope*/
    ctx[21],
    null
  );
  const block = {
    c: function create() {
      if (default_slot)
        default_slot.c();
    },
    l: function claim(nodes) {
      if (default_slot)
        default_slot.l(nodes);
    },
    m: function mount(target, anchor) {
      if (default_slot) {
        default_slot.m(target, anchor);
      }
      current = true;
    },
    p: function update(ctx2, dirty) {
      if (default_slot) {
        if (default_slot.p && (!current || dirty[0] & /*$$scope*/
        2097152)) {
          update_slot_base(
            default_slot,
            default_slot_template,
            ctx2,
            /*$$scope*/
            ctx2[21],
            !current ? get_all_dirty_from_scope(
              /*$$scope*/
              ctx2[21]
            ) : get_slot_changes(
              default_slot_template,
              /*$$scope*/
              ctx2[21],
              dirty,
              null
            ),
            null
          );
        }
      }
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(default_slot, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(default_slot, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (default_slot)
        default_slot.d(detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_else_block.name,
    type: "else",
    source: "(242:0) {:else}",
    ctx
  });
  return block;
}
function create_if_block(ctx) {
  let span;
  let t;
  let div;
  let div_class_value;
  let current;
  const default_slot_template = (
    /*#slots*/
    ctx[22].default
  );
  const default_slot = create_slot(
    default_slot_template,
    ctx,
    /*$$scope*/
    ctx[21],
    null
  );
  let if_block = !/*isComponent*/
  ctx[12] && create_if_block_1(ctx);
  const block = {
    c: function create() {
      span = element("span");
      if (default_slot)
        default_slot.c();
      t = space();
      div = element("div");
      if (if_block)
        if_block.c();
      this.h();
    },
    l: function claim(nodes) {
      span = claim_element(nodes, "SPAN", { class: true });
      var span_nodes = children(span);
      if (default_slot)
        default_slot.l(span_nodes);
      span_nodes.forEach(detach_dev);
      t = claim_space(nodes);
      div = claim_element(nodes, "DIV", { class: true, style: true });
      var div_nodes = children(div);
      if (if_block)
        if_block.l(div_nodes);
      div_nodes.forEach(detach_dev);
      this.h();
    },
    h: function hydrate() {
      attr_dev(span, "class", "tooltip-container");
      add_location(span, file, 227, 2, 4779);
      attr_dev(div, "class", div_class_value = "tooltip animation-" + /*animationEffect*/
      ctx[9] + " " + /*position*/
      ctx[0] + " " + /*theme*/
      ctx[4] + " svelte-1xktviv");
      set_style(div, "bottom", "auto");
      set_style(div, "right", "auto");
      set_style(
        div,
        "left",
        /*coords*/
        ctx[11].left + "px"
      );
      set_style(
        div,
        "min-width",
        /*minWidth*/
        ctx[8] + "px"
      );
      set_style(
        div,
        "max-width",
        /*maxWidth*/
        ctx[3] + "px"
      );
      set_style(
        div,
        "text-align",
        /*align*/
        ctx[2]
      );
      set_style(
        div,
        "top",
        /*coords*/
        ctx[11].top + "px"
      );
      toggle_class(div, "arrowless", !/*arrow*/
      ctx[5]);
      toggle_class(
        div,
        "show",
        /*visible*/
        ctx[10]
      );
      add_location(div, file, 230, 2, 4862);
    },
    m: function mount(target, anchor) {
      insert_hydration_dev(target, span, anchor);
      if (default_slot) {
        default_slot.m(span, null);
      }
      ctx[23](span);
      insert_hydration_dev(target, t, anchor);
      insert_hydration_dev(target, div, anchor);
      if (if_block)
        if_block.m(div, null);
      ctx[24](div);
      current = true;
    },
    p: function update(ctx2, dirty) {
      if (default_slot) {
        if (default_slot.p && (!current || dirty[0] & /*$$scope*/
        2097152)) {
          update_slot_base(
            default_slot,
            default_slot_template,
            ctx2,
            /*$$scope*/
            ctx2[21],
            !current ? get_all_dirty_from_scope(
              /*$$scope*/
              ctx2[21]
            ) : get_slot_changes(
              default_slot_template,
              /*$$scope*/
              ctx2[21],
              dirty,
              null
            ),
            null
          );
        }
      }
      if (!/*isComponent*/
      ctx2[12]) {
        if (if_block) {
          if_block.p(ctx2, dirty);
        } else {
          if_block = create_if_block_1(ctx2);
          if_block.c();
          if_block.m(div, null);
        }
      } else if (if_block) {
        if_block.d(1);
        if_block = null;
      }
      if (!current || dirty[0] & /*animationEffect, position, theme*/
      529 && div_class_value !== (div_class_value = "tooltip animation-" + /*animationEffect*/
      ctx2[9] + " " + /*position*/
      ctx2[0] + " " + /*theme*/
      ctx2[4] + " svelte-1xktviv")) {
        attr_dev(div, "class", div_class_value);
      }
      if (!current || dirty[0] & /*coords*/
      2048) {
        set_style(
          div,
          "left",
          /*coords*/
          ctx2[11].left + "px"
        );
      }
      if (!current || dirty[0] & /*minWidth*/
      256) {
        set_style(
          div,
          "min-width",
          /*minWidth*/
          ctx2[8] + "px"
        );
      }
      if (!current || dirty[0] & /*maxWidth*/
      8) {
        set_style(
          div,
          "max-width",
          /*maxWidth*/
          ctx2[3] + "px"
        );
      }
      if (!current || dirty[0] & /*align*/
      4) {
        set_style(
          div,
          "text-align",
          /*align*/
          ctx2[2]
        );
      }
      if (!current || dirty[0] & /*coords*/
      2048) {
        set_style(
          div,
          "top",
          /*coords*/
          ctx2[11].top + "px"
        );
      }
      if (!current || dirty[0] & /*animationEffect, position, theme, arrow*/
      561) {
        toggle_class(div, "arrowless", !/*arrow*/
        ctx2[5]);
      }
      if (!current || dirty[0] & /*animationEffect, position, theme, visible*/
      1553) {
        toggle_class(
          div,
          "show",
          /*visible*/
          ctx2[10]
        );
      }
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(default_slot, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(default_slot, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching) {
        detach_dev(span);
        detach_dev(t);
        detach_dev(div);
      }
      if (default_slot)
        default_slot.d(detaching);
      ctx[23](null);
      if (if_block)
        if_block.d();
      ctx[24](null);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block.name,
    type: "if",
    source: "(227:0) {#if content}",
    ctx
  });
  return block;
}
function create_if_block_1(ctx) {
  let html_tag;
  let html_anchor;
  const block = {
    c: function create() {
      html_tag = new HtmlTagHydration(false);
      html_anchor = empty();
      this.h();
    },
    l: function claim(nodes) {
      html_tag = claim_html_tag(nodes, false);
      html_anchor = empty();
      this.h();
    },
    h: function hydrate() {
      html_tag.a = html_anchor;
    },
    m: function mount(target, anchor) {
      html_tag.m(
        /*content*/
        ctx[1],
        target,
        anchor
      );
      insert_hydration_dev(target, html_anchor, anchor);
    },
    p: function update(ctx2, dirty) {
      if (dirty[0] & /*content*/
      2)
        html_tag.p(
          /*content*/
          ctx2[1]
        );
    },
    d: function destroy(detaching) {
      if (detaching) {
        detach_dev(html_anchor);
        html_tag.d();
      }
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_1.name,
    type: "if",
    source: "(238:4) {#if !isComponent}",
    ctx
  });
  return block;
}
function create_fragment(ctx) {
  let current_block_type_index;
  let if_block;
  let if_block_anchor;
  let current;
  let mounted;
  let dispose;
  const if_block_creators = [create_if_block, create_else_block];
  const if_blocks = [];
  function select_block_type(ctx2, dirty) {
    if (
      /*content*/
      ctx2[1]
    )
      return 0;
    return 1;
  }
  current_block_type_index = select_block_type(ctx, [-1, -1]);
  if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
  const block = {
    c: function create() {
      if_block.c();
      if_block_anchor = empty();
    },
    l: function claim(nodes) {
      if_block.l(nodes);
      if_block_anchor = empty();
    },
    m: function mount(target, anchor) {
      if_blocks[current_block_type_index].m(target, anchor);
      insert_hydration_dev(target, if_block_anchor, anchor);
      current = true;
      if (!mounted) {
        dispose = listen_dev(
          window,
          "resize",
          /*onHandleResize*/
          ctx[13],
          false,
          false,
          false,
          false
        );
        mounted = true;
      }
    },
    p: function update(ctx2, dirty) {
      let previous_block_index = current_block_type_index;
      current_block_type_index = select_block_type(ctx2, dirty);
      if (current_block_type_index === previous_block_index) {
        if_blocks[current_block_type_index].p(ctx2, dirty);
      } else {
        group_outros();
        transition_out(if_blocks[previous_block_index], 1, 1, () => {
          if_blocks[previous_block_index] = null;
        });
        check_outros();
        if_block = if_blocks[current_block_type_index];
        if (!if_block) {
          if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx2);
          if_block.c();
        } else {
          if_block.p(ctx2, dirty);
        }
        transition_in(if_block, 1);
        if_block.m(if_block_anchor.parentNode, if_block_anchor);
      }
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(if_block);
      current = true;
    },
    o: function outro(local) {
      transition_out(if_block);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching) {
        detach_dev(if_block_anchor);
      }
      if_blocks[current_block_type_index].d(detaching);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance($$self, $$props, $$invalidate) {
  let isComponent;
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("Tooltip", slots, ["default"]);
  let { action = "hover" } = $$props;
  let { content = "" } = $$props;
  let { align = "left" } = $$props;
  let { position = "top" } = $$props;
  let { maxWidth = 200 } = $$props;
  let { style = null } = $$props;
  let { theme = "" } = $$props;
  let { animation = "" } = $$props;
  let { hideOnClickOutside = false } = $$props;
  let { delay = 200 } = $$props;
  let { arrow = true } = $$props;
  let { autoPosition = false } = $$props;
  let { show = false } = $$props;
  let containerRef = null;
  let tooltipRef = null;
  let minWidth = 0;
  let component = null;
  let initialPosition = position;
  let animationEffect = null;
  let timer = null;
  let visible = false;
  let coords = { bottom: 0, top: 0, right: 0, left: 0 };
  const detect = ({ target }) => {
    if (hideOnClickOutside && containerRef !== target && tooltipRef !== target && // @ts-ignore
    !(containerRef == null ? void 0 : containerRef.parentNode.contains(target)) && !(tooltipRef == null ? void 0 : tooltipRef.contains(target))) {
      onHide();
    }
  };
  const onClick = () => {
    if (visible) {
      onHide();
    } else {
      onShow();
    }
  };
  const onShow = () => {
    const animationDelay = animation ? delay : 0;
    if (autoPosition && // @ts-ignore
    !isElementInViewport(containerRef, tooltipRef, position)) {
      $$invalidate(0, position = inverse[position]);
    }
    $$invalidate(11, coords = computeTooltipPosition(containerRef, tooltipRef, position, coords));
    if (animation) {
      $$invalidate(9, animationEffect = animation);
    }
    timer = setTimeout(() => $$invalidate(10, visible = true), animationDelay);
  };
  const onHide = () => {
    $$invalidate(10, visible = false);
    $$invalidate(0, position = initialPosition);
    $$invalidate(9, animationEffect = null);
    if (timer) {
      clearTimeout(timer);
      timer = null;
    }
  };
  const addListeners = () => {
    if (containerRef !== null) {
      removeListeners();
      if (action === "click") {
        containerRef.addEventListener("click", onClick);
        if (hideOnClickOutside) {
          document.addEventListener("click", detect, { passive: true, capture: true });
        }
      }
      if (action === "hover") {
        containerRef.addEventListener("mouseenter", onShow);
        containerRef.addEventListener("mouseleave", onHide);
      }
    }
  };
  const removeListeners = () => {
    if (hideOnClickOutside) {
      document.removeEventListener("click", detect);
    }
    if (containerRef !== null) {
      containerRef.removeEventListener("click", onClick);
      containerRef.removeEventListener("mouseenter", onShow);
      containerRef.removeEventListener("mouseleave", onHide);
    }
  };
  onMount(() => {
    addListeners();
    computeTooltipPosition();
    if (tooltipRef !== null) {
      if (isComponent && !component) {
        component = new content.component({
          target: tooltipRef,
          // @ts-ignore
          props: content.props
        });
      }
      $$invalidate(8, minWidth = getMinWidth(tooltipRef, maxWidth));
      if (style && typeof style === "object") {
        for (let prop in style) {
          const key = formatVariableKey(prop);
          const value = style[prop];
          tooltipRef.style.setProperty(`--tooltip-${key}`, value);
        }
      }
    }
  });
  onDestroy(() => {
    if (component) {
      component.$destroy();
      component = null;
    }
    removeListeners();
  });
  const onHandleResize = () => {
    if (visible) {
      $$invalidate(11, coords = computeTooltipPosition(containerRef, tooltipRef, position, coords));
    }
  };
  const writable_props = [
    "action",
    "content",
    "align",
    "position",
    "maxWidth",
    "style",
    "theme",
    "animation",
    "hideOnClickOutside",
    "delay",
    "arrow",
    "autoPosition",
    "show"
  ];
  Object.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console.warn(`<Tooltip> was created with unknown prop '${key}'`);
  });
  function span_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      containerRef = $$value;
      $$invalidate(7, containerRef);
    });
  }
  function div_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      tooltipRef = $$value;
      $$invalidate(6, tooltipRef);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("action" in $$props2)
      $$invalidate(14, action = $$props2.action);
    if ("content" in $$props2)
      $$invalidate(1, content = $$props2.content);
    if ("align" in $$props2)
      $$invalidate(2, align = $$props2.align);
    if ("position" in $$props2)
      $$invalidate(0, position = $$props2.position);
    if ("maxWidth" in $$props2)
      $$invalidate(3, maxWidth = $$props2.maxWidth);
    if ("style" in $$props2)
      $$invalidate(15, style = $$props2.style);
    if ("theme" in $$props2)
      $$invalidate(4, theme = $$props2.theme);
    if ("animation" in $$props2)
      $$invalidate(16, animation = $$props2.animation);
    if ("hideOnClickOutside" in $$props2)
      $$invalidate(17, hideOnClickOutside = $$props2.hideOnClickOutside);
    if ("delay" in $$props2)
      $$invalidate(18, delay = $$props2.delay);
    if ("arrow" in $$props2)
      $$invalidate(5, arrow = $$props2.arrow);
    if ("autoPosition" in $$props2)
      $$invalidate(19, autoPosition = $$props2.autoPosition);
    if ("show" in $$props2)
      $$invalidate(20, show = $$props2.show);
    if ("$$scope" in $$props2)
      $$invalidate(21, $$scope = $$props2.$$scope);
  };
  $$self.$capture_state = () => ({
    onMount,
    onDestroy,
    computeTooltipPosition,
    formatVariableKey,
    getMinWidth,
    isElementInViewport,
    inverse,
    action,
    content,
    align,
    position,
    maxWidth,
    style,
    theme,
    animation,
    hideOnClickOutside,
    delay,
    arrow,
    autoPosition,
    show,
    containerRef,
    tooltipRef,
    minWidth,
    component,
    initialPosition,
    animationEffect,
    timer,
    visible,
    coords,
    detect,
    onClick,
    onShow,
    onHide,
    addListeners,
    removeListeners,
    onHandleResize,
    isComponent
  });
  $$self.$inject_state = ($$props2) => {
    if ("action" in $$props2)
      $$invalidate(14, action = $$props2.action);
    if ("content" in $$props2)
      $$invalidate(1, content = $$props2.content);
    if ("align" in $$props2)
      $$invalidate(2, align = $$props2.align);
    if ("position" in $$props2)
      $$invalidate(0, position = $$props2.position);
    if ("maxWidth" in $$props2)
      $$invalidate(3, maxWidth = $$props2.maxWidth);
    if ("style" in $$props2)
      $$invalidate(15, style = $$props2.style);
    if ("theme" in $$props2)
      $$invalidate(4, theme = $$props2.theme);
    if ("animation" in $$props2)
      $$invalidate(16, animation = $$props2.animation);
    if ("hideOnClickOutside" in $$props2)
      $$invalidate(17, hideOnClickOutside = $$props2.hideOnClickOutside);
    if ("delay" in $$props2)
      $$invalidate(18, delay = $$props2.delay);
    if ("arrow" in $$props2)
      $$invalidate(5, arrow = $$props2.arrow);
    if ("autoPosition" in $$props2)
      $$invalidate(19, autoPosition = $$props2.autoPosition);
    if ("show" in $$props2)
      $$invalidate(20, show = $$props2.show);
    if ("containerRef" in $$props2)
      $$invalidate(7, containerRef = $$props2.containerRef);
    if ("tooltipRef" in $$props2)
      $$invalidate(6, tooltipRef = $$props2.tooltipRef);
    if ("minWidth" in $$props2)
      $$invalidate(8, minWidth = $$props2.minWidth);
    if ("component" in $$props2)
      component = $$props2.component;
    if ("initialPosition" in $$props2)
      initialPosition = $$props2.initialPosition;
    if ("animationEffect" in $$props2)
      $$invalidate(9, animationEffect = $$props2.animationEffect);
    if ("timer" in $$props2)
      timer = $$props2.timer;
    if ("visible" in $$props2)
      $$invalidate(10, visible = $$props2.visible);
    if ("coords" in $$props2)
      $$invalidate(11, coords = $$props2.coords);
    if ("isComponent" in $$props2)
      $$invalidate(12, isComponent = $$props2.isComponent);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  $$self.$$.update = () => {
    if ($$self.$$.dirty[0] & /*content*/
    2) {
      $:
        $$invalidate(12, isComponent = typeof content === "object");
    }
    if ($$self.$$.dirty[0] & /*action*/
    16384) {
      $:
        action, addListeners();
    }
    if ($$self.$$.dirty[0] & /*tooltipRef, show*/
    1048640) {
      $:
        tooltipRef && show ? setTimeout(onShow, 0) : setTimeout(onHide, 0);
    }
  };
  return [
    position,
    content,
    align,
    maxWidth,
    theme,
    arrow,
    tooltipRef,
    containerRef,
    minWidth,
    animationEffect,
    visible,
    coords,
    isComponent,
    onHandleResize,
    action,
    style,
    animation,
    hideOnClickOutside,
    delay,
    autoPosition,
    show,
    $$scope,
    slots,
    span_binding,
    div_binding
  ];
}
var Tooltip = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(
      this,
      options,
      instance,
      create_fragment,
      safe_not_equal,
      {
        action: 14,
        content: 1,
        align: 2,
        position: 0,
        maxWidth: 3,
        style: 15,
        theme: 4,
        animation: 16,
        hideOnClickOutside: 17,
        delay: 18,
        arrow: 5,
        autoPosition: 19,
        show: 20
      },
      add_css,
      [-1, -1]
    );
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "Tooltip",
      options,
      id: create_fragment.name
    });
  }
  get action() {
    throw new Error("<Tooltip>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set action(value) {
    throw new Error("<Tooltip>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get content() {
    throw new Error("<Tooltip>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set content(value) {
    throw new Error("<Tooltip>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get align() {
    throw new Error("<Tooltip>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set align(value) {
    throw new Error("<Tooltip>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get position() {
    throw new Error("<Tooltip>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set position(value) {
    throw new Error("<Tooltip>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get maxWidth() {
    throw new Error("<Tooltip>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set maxWidth(value) {
    throw new Error("<Tooltip>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get style() {
    throw new Error("<Tooltip>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set style(value) {
    throw new Error("<Tooltip>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get theme() {
    throw new Error("<Tooltip>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set theme(value) {
    throw new Error("<Tooltip>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get animation() {
    throw new Error("<Tooltip>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set animation(value) {
    throw new Error("<Tooltip>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get hideOnClickOutside() {
    throw new Error("<Tooltip>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set hideOnClickOutside(value) {
    throw new Error("<Tooltip>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get delay() {
    throw new Error("<Tooltip>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set delay(value) {
    throw new Error("<Tooltip>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get arrow() {
    throw new Error("<Tooltip>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set arrow(value) {
    throw new Error("<Tooltip>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get autoPosition() {
    throw new Error("<Tooltip>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set autoPosition(value) {
    throw new Error("<Tooltip>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get show() {
    throw new Error("<Tooltip>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set show(value) {
    throw new Error("<Tooltip>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
};
var tooltip_default = Tooltip;

// node_modules/@svelte-plugins/tooltips/dist/action-tooltip.svelte
var file2 = "node_modules\\@svelte-plugins\\tooltips\\dist\\action-tooltip.svelte";
function add_css2(target) {
  append_styles(target, "svelte-16lxf1i", ":root{--tooltip-arrow-size:10px;--tooltip-background-color:rgba(0, 0, 0, 0.9);--tooltip-border-radius:4px;--tooltip-box-shadow:0 1px 20px rgba(0, 0, 0, 0.25);--tooltip-font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,\n      Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif;--tooltip-font-size:14px;--tooltip-font-weight:500;--tooltip-line-height:1.25rem;--tooltip-color:#fff;--tooltip-offset-x:12px;--tooltip-offset-y:12px;--tooltip-padding:12px;--tooltip-pointer-events:none;--tooltip-white-space-hidden:nowrap;--tooltip-white-space-shown:normal;--tooltip-z-index:100}.tooltip.svelte-16lxf1i{background-color:var(--tooltip-background-color);box-shadow:var(--tooltip-box-shadow);border-radius:var(--tooltip-border-radius);color:var(--tooltip-color);opacity:0;font-family:var(--tooltip-font-family);font-size:var(--tooltip-font-size);font-style:normal;font-weight:var(--tooltip-font-weight);line-height:var(--tooltip-line-height);padding:var(--tooltip-padding);pointer-events:var(---tooltip-pointer-events);position:absolute;text-align:left;visibility:hidden;white-space:var(--tooltip-white-space-hidden);z-index:var(--tooltip-z-index)}.tooltip.show.svelte-16lxf1i{opacity:1;visibility:visible;white-space:var(--tooltip-white-space-shown)}.tooltip.bottom.svelte-16lxf1i:after,.tooltip.left.svelte-16lxf1i:after,.tooltip.right.svelte-16lxf1i:after,.tooltip.top.svelte-16lxf1i:after{border:var(--tooltip-arrow-size) solid var(--tooltip-background-color);content:' ';position:absolute}.tooltip.arrowless.svelte-16lxf1i:after{border:0 !important}.tooltip.bottom.svelte-16lxf1i,.tooltip.top.svelte-16lxf1i{--tooltip-offset-x:0px;--tooltip-offset-y:12px}.tooltip.left.svelte-16lxf1i,.tooltip.right.svelte-16lxf1i{--tooltip-offset-x:12px;--tooltip-offset-y:0px}.tooltip.bottom.svelte-16lxf1i{bottom:0;left:50%;transform:translate(\n      calc(-50% + var(--tooltip-offset-x)),\n      calc(100% + var(--tooltip-offset-y))\n    )}.tooltip.bottom.svelte-16lxf1i:after{border-color:transparent transparent var(--tooltip-background-color);left:50%;top:0;transform:translate(-50%, -99%)}.tooltip.top.svelte-16lxf1i{left:50%;top:0;transform:translate(\n      calc(-50% + var(--tooltip-offset-x)),\n      calc(-100% - var(--tooltip-offset-y))\n    )}.tooltip.top.svelte-16lxf1i:after{border-color:var(--tooltip-background-color) transparent transparent\n      transparent;bottom:0;left:50%;transform:translate(-50%, 99%)}.tooltip.left.svelte-16lxf1i{left:0;top:50%;transform:translate(\n      calc(-100% - var(--tooltip-offset-x)),\n      calc(-50% - var(--tooltip-offset-y))\n    )}.tooltip.left.svelte-16lxf1i:after{border-color:transparent transparent transparent\n      var(--tooltip-background-color);right:0;top:50%;transform:translate(99%, -50%)}.tooltip.right.svelte-16lxf1i{right:0;top:50%;transform:translate(\n      calc(100% + var(--tooltip-offset-x)),\n      calc(-50% - var(--tooltip-offset-y))\n    )}.tooltip.right.svelte-16lxf1i:after{border-color:transparent var(--tooltip-background-color) transparent\n      transparent;left:0;top:50%;transform:translate(-99%, -50%)}.tooltip.animation-fade.svelte-16lxf1i{opacity:0;transition:opacity 0.25s ease-in-out}.tooltip.animation-fade.show.svelte-16lxf1i{opacity:1}.tooltip.top.animation-slide.svelte-16lxf1i{margin-top:10px;opacity:0;transition:opacity 0.25s ease-in-out,\n      margin 0.25s ease-in-out}.tooltip.top.animation-slide.show.svelte-16lxf1i{margin-top:0;opacity:1}.tooltip.bottom.animation-slide.svelte-16lxf1i{margin-bottom:20px;opacity:0;transition:opacity 0.25s ease-in-out,\n      margin 0.25s ease-in-out}.tooltip.bottom.animation-slide.show.svelte-16lxf1i{margin-bottom:0;opacity:1}.tooltip.right.animation-slide.svelte-16lxf1i{margin-right:20px;opacity:0;transition:opacity 0.25s ease-in-out,\n      margin 0.25s ease-in-out}.tooltip.right.animation-slide.show.svelte-16lxf1i{margin-right:0;opacity:1}.tooltip.left.animation-slide.svelte-16lxf1i{margin-left:20px;opacity:0;transition:opacity 0.25s ease-in-out,\n      margin 0.25s ease-in-out}.tooltip.left.animation-slide.show.svelte-16lxf1i{margin-left:0;opacity:1}.tooltip.left.animation-puff.svelte-16lxf1i{filter:blur(2px);opacity:0;transform:translate(\n        calc(-100% - var(--tooltip-offset-x)),\n        calc(-50% - var(--tooltip-offset-y))\n      )\n      scale(2, 2);transform-origin:50% 50%;transition:opacity 0.25s ease-in-out,\n      filter 0.25s ease-in-out,\n      transform 0.25s ease-in-out}.tooltip.left.animation-puff.show.svelte-16lxf1i{filter:blur(0);opacity:1;transform:translate(\n        calc(-100% - var(--tooltip-offset-x)),\n        calc(-50% - var(--tooltip-offset-y))\n      )\n      scale(1, 1)}.tooltip.right.animation-puff.svelte-16lxf1i{filter:blur(2px);opacity:0;transform:translate(\n        calc(100% + var(--tooltip-offset-x)),\n        calc(-50% - var(--tooltip-offset-y))\n      )\n      scale(2, 2);transform-origin:50% 50%;transition:opacity 0.25s ease-in-out,\n      filter 0.25s ease-in-out,\n      transform 0.25s ease-in-out}.tooltip.right.animation-puff.show.svelte-16lxf1i{filter:blur(0);opacity:1;transform:translate(\n        calc(100% + var(--tooltip-offset-x)),\n        calc(-50% - var(--tooltip-offset-y))\n      )\n      scale(1, 1)}.tooltip.top.animation-puff.svelte-16lxf1i{filter:blur(2px);opacity:0;transform:translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(-100% - var(--tooltip-offset-y))\n      )\n      scale(2, 2);transform-origin:50% 50%;transition:opacity 0.25s ease-in-out,\n      filter 0.25s ease-in-out,\n      transform 0.25s ease-in-out}.tooltip.top.animation-puff.show.svelte-16lxf1i{filter:blur(0);opacity:1;transform:translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(-100% - var(--tooltip-offset-y))\n      )\n      scale(1, 1)}.tooltip.bottom.animation-puff.svelte-16lxf1i{filter:blur(2px);opacity:0;transform:translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(100% + var(--tooltip-offset-y))\n      )\n      scale(2, 2);transform-origin:50% 50%;transition:opacity 0.25s ease-in-out,\n      filter 0.25s ease-in-out,\n      transform 0.25s ease-in-out}.tooltip.bottom.animation-puff.show.svelte-16lxf1i{filter:blur(0);opacity:1;transform:translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(100% + var(--tooltip-offset-y))\n      )\n      scale(1, 1)}.tooltip.left.animation-bounce.svelte-16lxf1i{opacity:0;transform:translate(\n        calc(-100% - var(--tooltip-offset-x)),\n        calc(-50% + var(--tooltip-offset-y))\n      )\n      scale(1.2, 1.2);transform-origin:50% 50%;transition:opacity 0.25s ease-in-out,\n      transform 0.25s cubic-bezier(0.5, -1, 0.5, 3)}.tooltip.left.animation-bounce.show.svelte-16lxf1i{opacity:1;transform:translate(\n        calc(-100% - var(--tooltip-offset-x)),\n        calc(-50% + var(--tooltip-offset-y))\n      )\n      scale(1, 1)}.tooltip.right.animation-bounce.svelte-16lxf1i{opacity:0;transform:translate(\n        calc(100% + var(--tooltip-offset-x)),\n        calc(-50% + var(--tooltip-offset-y))\n      )\n      scale(1.2, 1.2);transform-origin:50% 50%;transition:opacity 0.25s ease-in-out,\n      transform 0.25s cubic-bezier(0.5, -1, 0.5, 3)}.tooltip.right.animation-bounce.show.svelte-16lxf1i{opacity:1;transform:translate(\n        calc(100% + var(--tooltip-offset-x)),\n        calc(-50% + var(--tooltip-offset-y))\n      )\n      scale(1, 1)}.tooltip.top.animation-bounce.svelte-16lxf1i{opacity:0;transform:translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(-100% - var(--tooltip-offset-y))\n      )\n      scale(1.2, 1.2);transform-origin:50% 50%;transition:opacity 0.25s ease-in-out,\n      transform 0.25s cubic-bezier(0.5, -1, 0.5, 3)}.tooltip.top.animation-bounce.show.svelte-16lxf1i{opacity:1;transform:translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(-100% - var(--tooltip-offset-y))\n      )\n      scale(1, 1)}.tooltip.bottom.animation-bounce.svelte-16lxf1i{opacity:0;transform:translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(100% + var(--tooltip-offset-y))\n      )\n      scale(1.2, 1.2);transform-origin:50% 50%;transition:opacity 0.25s ease-in-out,\n      transform 0.25s cubic-bezier(0.5, -1, 0.5, 3)}.tooltip.bottom.animation-bounce.show.svelte-16lxf1i{opacity:1;transform:translate(\n        calc(-50% + var(--tooltip-offset-x)),\n        calc(100% + var(--tooltip-offset-y))\n      )\n      scale(1, 1)}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
}
function create_if_block2(ctx) {
  let div;
  let div_class_value;
  let if_block = !/*isComponent*/
  ctx[11] && create_if_block_12(ctx);
  const block = {
    c: function create() {
      div = element("div");
      if (if_block)
        if_block.c();
      this.h();
    },
    l: function claim(nodes) {
      div = claim_element(nodes, "DIV", { class: true, style: true });
      var div_nodes = children(div);
      if (if_block)
        if_block.l(div_nodes);
      div_nodes.forEach(detach_dev);
      this.h();
    },
    h: function hydrate() {
      attr_dev(div, "class", div_class_value = "tooltip animation-" + /*animationEffect*/
      ctx[8] + " " + /*position*/
      ctx[0] + " " + /*theme*/
      ctx[4] + " svelte-16lxf1i");
      set_style(div, "bottom", "auto");
      set_style(div, "right", "auto");
      set_style(
        div,
        "left",
        /*coords*/
        ctx[10].left + "px"
      );
      set_style(
        div,
        "min-width",
        /*minWidth*/
        ctx[7] + "px"
      );
      set_style(
        div,
        "max-width",
        /*maxWidth*/
        ctx[3] + "px"
      );
      set_style(
        div,
        "text-align",
        /*align*/
        ctx[2]
      );
      set_style(
        div,
        "top",
        /*coords*/
        ctx[10].top + "px"
      );
      toggle_class(
        div,
        "show",
        /*visible*/
        ctx[9]
      );
      toggle_class(div, "arrowless", !/*arrow*/
      ctx[5]);
      add_location(div, file2, 150, 2, 3005);
    },
    m: function mount(target, anchor) {
      insert_hydration_dev(target, div, anchor);
      if (if_block)
        if_block.m(div, null);
      ctx[20](div);
    },
    p: function update(ctx2, dirty) {
      if (!/*isComponent*/
      ctx2[11]) {
        if (if_block) {
          if_block.p(ctx2, dirty);
        } else {
          if_block = create_if_block_12(ctx2);
          if_block.c();
          if_block.m(div, null);
        }
      } else if (if_block) {
        if_block.d(1);
        if_block = null;
      }
      if (dirty & /*animationEffect, position, theme*/
      273 && div_class_value !== (div_class_value = "tooltip animation-" + /*animationEffect*/
      ctx2[8] + " " + /*position*/
      ctx2[0] + " " + /*theme*/
      ctx2[4] + " svelte-16lxf1i")) {
        attr_dev(div, "class", div_class_value);
      }
      if (dirty & /*coords*/
      1024) {
        set_style(
          div,
          "left",
          /*coords*/
          ctx2[10].left + "px"
        );
      }
      if (dirty & /*minWidth*/
      128) {
        set_style(
          div,
          "min-width",
          /*minWidth*/
          ctx2[7] + "px"
        );
      }
      if (dirty & /*maxWidth*/
      8) {
        set_style(
          div,
          "max-width",
          /*maxWidth*/
          ctx2[3] + "px"
        );
      }
      if (dirty & /*align*/
      4) {
        set_style(
          div,
          "text-align",
          /*align*/
          ctx2[2]
        );
      }
      if (dirty & /*coords*/
      1024) {
        set_style(
          div,
          "top",
          /*coords*/
          ctx2[10].top + "px"
        );
      }
      if (dirty & /*animationEffect, position, theme, visible*/
      785) {
        toggle_class(
          div,
          "show",
          /*visible*/
          ctx2[9]
        );
      }
      if (dirty & /*animationEffect, position, theme, arrow*/
      305) {
        toggle_class(div, "arrowless", !/*arrow*/
        ctx2[5]);
      }
    },
    d: function destroy(detaching) {
      if (detaching) {
        detach_dev(div);
      }
      if (if_block)
        if_block.d();
      ctx[20](null);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block2.name,
    type: "if",
    source: "(150:0) {#if content}",
    ctx
  });
  return block;
}
function create_if_block_12(ctx) {
  let html_tag;
  let html_anchor;
  const block = {
    c: function create() {
      html_tag = new HtmlTagHydration(false);
      html_anchor = empty();
      this.h();
    },
    l: function claim(nodes) {
      html_tag = claim_html_tag(nodes, false);
      html_anchor = empty();
      this.h();
    },
    h: function hydrate() {
      html_tag.a = html_anchor;
    },
    m: function mount(target, anchor) {
      html_tag.m(
        /*content*/
        ctx[1],
        target,
        anchor
      );
      insert_hydration_dev(target, html_anchor, anchor);
    },
    p: function update(ctx2, dirty) {
      if (dirty & /*content*/
      2)
        html_tag.p(
          /*content*/
          ctx2[1]
        );
    },
    d: function destroy(detaching) {
      if (detaching) {
        detach_dev(html_anchor);
        html_tag.d();
      }
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_12.name,
    type: "if",
    source: "(158:4) {#if !isComponent}",
    ctx
  });
  return block;
}
function create_fragment2(ctx) {
  let if_block_anchor;
  let mounted;
  let dispose;
  let if_block = (
    /*content*/
    ctx[1] && create_if_block2(ctx)
  );
  const block = {
    c: function create() {
      if (if_block)
        if_block.c();
      if_block_anchor = empty();
    },
    l: function claim(nodes) {
      if (if_block)
        if_block.l(nodes);
      if_block_anchor = empty();
    },
    m: function mount(target, anchor) {
      if (if_block)
        if_block.m(target, anchor);
      insert_hydration_dev(target, if_block_anchor, anchor);
      if (!mounted) {
        dispose = listen_dev(
          window,
          "resize",
          /*onHandleResize*/
          ctx[12],
          false,
          false,
          false,
          false
        );
        mounted = true;
      }
    },
    p: function update(ctx2, [dirty]) {
      if (
        /*content*/
        ctx2[1]
      ) {
        if (if_block) {
          if_block.p(ctx2, dirty);
        } else {
          if_block = create_if_block2(ctx2);
          if_block.c();
          if_block.m(if_block_anchor.parentNode, if_block_anchor);
        }
      } else if (if_block) {
        if_block.d(1);
        if_block = null;
      }
    },
    i: noop,
    o: noop,
    d: function destroy(detaching) {
      if (detaching) {
        detach_dev(if_block_anchor);
      }
      if (if_block)
        if_block.d(detaching);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment2.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance2($$self, $$props, $$invalidate) {
  let isComponent;
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("Action_tooltip", slots, []);
  let { targetElement = null } = $$props;
  let { action = "hover" } = $$props;
  let { content = "" } = $$props;
  let { align = "left" } = $$props;
  let { position = "top" } = $$props;
  let { maxWidth = 200 } = $$props;
  let { style = null } = $$props;
  let { theme = "" } = $$props;
  let { animation = "" } = $$props;
  let { delay = 200 } = $$props;
  let { arrow = true } = $$props;
  let { autoPosition = false } = $$props;
  let { show = false } = $$props;
  let tooltipRef = null;
  let minWidth = 0;
  let component = null;
  let animationEffect = null;
  let visible = false;
  let coords = { bottom: 0, top: 0, right: 0, left: 0 };
  const animationDelay = animation ? delay : 0;
  onMount(() => {
    if (tooltipRef !== null) {
      if (isComponent && !component) {
        component = new content.component({
          target: tooltipRef,
          // @ts-ignore
          props: { action, ...content.props }
        });
      }
      $$invalidate(7, minWidth = getMinWidth(tooltipRef, maxWidth));
      if (style && typeof style === "object") {
        for (let prop in style) {
          const key = formatVariableKey(prop);
          const value = style[prop];
          tooltipRef.style.setProperty(`--tooltip-${key}`, value);
        }
      }
    }
    if (autoPosition && // @ts-ignore
    !isElementInViewport(tooltipRef, targetElement, position)) {
      $$invalidate(0, position = inverse[position]);
    }
    $$invalidate(10, coords = computeTooltipPosition(targetElement, tooltipRef, position, coords));
    if (animation) {
      $$invalidate(8, animationEffect = animation);
    }
    setTimeout(() => $$invalidate(9, visible = true), animationDelay);
  });
  onDestroy(() => {
    if (component) {
      component.$destroy();
      component = null;
      $$invalidate(9, visible = false);
      $$invalidate(13, show = false);
    }
  });
  const onHandleResize = () => {
    if (visible) {
      $$invalidate(10, coords = computeTooltipPosition(targetElement, tooltipRef, position, coords));
    }
  };
  const writable_props = [
    "targetElement",
    "action",
    "content",
    "align",
    "position",
    "maxWidth",
    "style",
    "theme",
    "animation",
    "delay",
    "arrow",
    "autoPosition",
    "show"
  ];
  Object.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console.warn(`<Action_tooltip> was created with unknown prop '${key}'`);
  });
  function div_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      tooltipRef = $$value;
      $$invalidate(6, tooltipRef);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("targetElement" in $$props2)
      $$invalidate(14, targetElement = $$props2.targetElement);
    if ("action" in $$props2)
      $$invalidate(15, action = $$props2.action);
    if ("content" in $$props2)
      $$invalidate(1, content = $$props2.content);
    if ("align" in $$props2)
      $$invalidate(2, align = $$props2.align);
    if ("position" in $$props2)
      $$invalidate(0, position = $$props2.position);
    if ("maxWidth" in $$props2)
      $$invalidate(3, maxWidth = $$props2.maxWidth);
    if ("style" in $$props2)
      $$invalidate(16, style = $$props2.style);
    if ("theme" in $$props2)
      $$invalidate(4, theme = $$props2.theme);
    if ("animation" in $$props2)
      $$invalidate(17, animation = $$props2.animation);
    if ("delay" in $$props2)
      $$invalidate(18, delay = $$props2.delay);
    if ("arrow" in $$props2)
      $$invalidate(5, arrow = $$props2.arrow);
    if ("autoPosition" in $$props2)
      $$invalidate(19, autoPosition = $$props2.autoPosition);
    if ("show" in $$props2)
      $$invalidate(13, show = $$props2.show);
  };
  $$self.$capture_state = () => ({
    onMount,
    onDestroy,
    computeTooltipPosition,
    formatVariableKey,
    getMinWidth,
    isElementInViewport,
    inverse,
    targetElement,
    action,
    content,
    align,
    position,
    maxWidth,
    style,
    theme,
    animation,
    delay,
    arrow,
    autoPosition,
    show,
    tooltipRef,
    minWidth,
    component,
    animationEffect,
    visible,
    coords,
    animationDelay,
    onHandleResize,
    isComponent
  });
  $$self.$inject_state = ($$props2) => {
    if ("targetElement" in $$props2)
      $$invalidate(14, targetElement = $$props2.targetElement);
    if ("action" in $$props2)
      $$invalidate(15, action = $$props2.action);
    if ("content" in $$props2)
      $$invalidate(1, content = $$props2.content);
    if ("align" in $$props2)
      $$invalidate(2, align = $$props2.align);
    if ("position" in $$props2)
      $$invalidate(0, position = $$props2.position);
    if ("maxWidth" in $$props2)
      $$invalidate(3, maxWidth = $$props2.maxWidth);
    if ("style" in $$props2)
      $$invalidate(16, style = $$props2.style);
    if ("theme" in $$props2)
      $$invalidate(4, theme = $$props2.theme);
    if ("animation" in $$props2)
      $$invalidate(17, animation = $$props2.animation);
    if ("delay" in $$props2)
      $$invalidate(18, delay = $$props2.delay);
    if ("arrow" in $$props2)
      $$invalidate(5, arrow = $$props2.arrow);
    if ("autoPosition" in $$props2)
      $$invalidate(19, autoPosition = $$props2.autoPosition);
    if ("show" in $$props2)
      $$invalidate(13, show = $$props2.show);
    if ("tooltipRef" in $$props2)
      $$invalidate(6, tooltipRef = $$props2.tooltipRef);
    if ("minWidth" in $$props2)
      $$invalidate(7, minWidth = $$props2.minWidth);
    if ("component" in $$props2)
      component = $$props2.component;
    if ("animationEffect" in $$props2)
      $$invalidate(8, animationEffect = $$props2.animationEffect);
    if ("visible" in $$props2)
      $$invalidate(9, visible = $$props2.visible);
    if ("coords" in $$props2)
      $$invalidate(10, coords = $$props2.coords);
    if ("isComponent" in $$props2)
      $$invalidate(11, isComponent = $$props2.isComponent);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*content*/
    2) {
      $:
        $$invalidate(11, isComponent = typeof content === "object");
    }
    if ($$self.$$.dirty & /*tooltipRef, show*/
    8256) {
      $:
        tooltipRef && show ? setTimeout(() => $$invalidate(9, visible = true), 0) : $$invalidate(9, visible = false);
    }
  };
  return [
    position,
    content,
    align,
    maxWidth,
    theme,
    arrow,
    tooltipRef,
    minWidth,
    animationEffect,
    visible,
    coords,
    isComponent,
    onHandleResize,
    show,
    targetElement,
    action,
    style,
    animation,
    delay,
    autoPosition,
    div_binding
  ];
}
var Action_tooltip = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(
      this,
      options,
      instance2,
      create_fragment2,
      safe_not_equal,
      {
        targetElement: 14,
        action: 15,
        content: 1,
        align: 2,
        position: 0,
        maxWidth: 3,
        style: 16,
        theme: 4,
        animation: 17,
        delay: 18,
        arrow: 5,
        autoPosition: 19,
        show: 13
      },
      add_css2
    );
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "Action_tooltip",
      options,
      id: create_fragment2.name
    });
  }
  get targetElement() {
    throw new Error("<Action_tooltip>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set targetElement(value) {
    throw new Error("<Action_tooltip>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get action() {
    throw new Error("<Action_tooltip>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set action(value) {
    throw new Error("<Action_tooltip>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get content() {
    throw new Error("<Action_tooltip>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set content(value) {
    throw new Error("<Action_tooltip>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get align() {
    throw new Error("<Action_tooltip>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set align(value) {
    throw new Error("<Action_tooltip>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get position() {
    throw new Error("<Action_tooltip>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set position(value) {
    throw new Error("<Action_tooltip>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get maxWidth() {
    throw new Error("<Action_tooltip>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set maxWidth(value) {
    throw new Error("<Action_tooltip>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get style() {
    throw new Error("<Action_tooltip>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set style(value) {
    throw new Error("<Action_tooltip>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get theme() {
    throw new Error("<Action_tooltip>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set theme(value) {
    throw new Error("<Action_tooltip>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get animation() {
    throw new Error("<Action_tooltip>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set animation(value) {
    throw new Error("<Action_tooltip>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get delay() {
    throw new Error("<Action_tooltip>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set delay(value) {
    throw new Error("<Action_tooltip>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get arrow() {
    throw new Error("<Action_tooltip>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set arrow(value) {
    throw new Error("<Action_tooltip>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get autoPosition() {
    throw new Error("<Action_tooltip>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set autoPosition(value) {
    throw new Error("<Action_tooltip>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get show() {
    throw new Error("<Action_tooltip>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set show(value) {
    throw new Error("<Action_tooltip>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
};
var action_tooltip_default = Action_tooltip;

// node_modules/@svelte-plugins/tooltips/dist/action.js
var tooltip = (element2, props) => {
  let component = null;
  let title = element2.getAttribute("title");
  let action = (props == null ? void 0 : props.action) || element2.getAttribute("action") || "hover";
  const hideOnClickOutside = (props == null ? void 0 : props.hideOnClickOutside) || element2.getAttribute("hideOnClickOutside") || false;
  const detect = ({ target }) => {
    if (hideOnClickOutside && target && !target.classList.contains("tooltip")) {
      onHide();
    }
  };
  const config = {
    ...props,
    targetElement: element2
  };
  if (config.hideOnClickOutside) {
    delete config.hideOnClickOutside;
  }
  if (title) {
    element2.removeAttribute("title");
    config.content = title;
  }
  const onClick = () => {
    if (component) {
      if (!(action === "click" && hideOnClickOutside)) {
        onHide();
      }
    } else {
      onShow();
    }
  };
  const onShow = () => {
    if (!component) {
      component = new action_tooltip_default({
        target: element2,
        props: config
      });
    }
  };
  const onHide = () => {
    if (component) {
      component.$destroy();
      component = null;
    }
  };
  const addListeners = () => {
    if (element2 !== null) {
      removeListeners();
      if (action === "click") {
        element2.addEventListener("click", onClick);
        if (hideOnClickOutside) {
          document.addEventListener("click", detect, {
            passive: true,
            capture: true
          });
        }
      }
      if (action === "hover") {
        element2.addEventListener("mouseenter", onShow);
        element2.addEventListener("mouseleave", onHide);
      }
    }
  };
  const removeListeners = () => {
    if (hideOnClickOutside) {
      document.removeEventListener("click", detect);
    }
    if (element2 !== null) {
      element2.removeEventListener("click", onClick);
      element2.removeEventListener("mouseenter", onShow);
      element2.removeEventListener("mouseleave", onHide);
    }
  };
  addListeners();
  if (config.show) {
    setTimeout(onShow, 0);
  }
  return {
    destroy() {
      removeListeners();
      if (title) {
        element2.setAttribute("title", title);
      }
    }
  };
};
export {
  tooltip_default as Tooltip,
  tooltip
};
//# sourceMappingURL=@svelte-plugins_tooltips.js.map
