{
  "version": 3,
  "sources": ["../../@svgdotjs/svg.draggable.js/node_modules/@babel/runtime/helpers/esm/classCallCheck.js", "../../@svgdotjs/svg.draggable.js/node_modules/@babel/runtime/helpers/esm/createClass.js", "../../@svgdotjs/svg.draggable.js/src/svg.draggable.js"],
  "sourcesContent": ["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}", "function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}", "import { Box, Element, G, extend, off, on } from '@svgdotjs/svg.js'\n\nconst getCoordsFromEvent = ev => {\n  if (ev.changedTouches) {\n    ev = ev.changedTouches[0]\n  }\n  return { x: ev.clientX, y: ev.clientY }\n}\n\n// Creates handler, saves it\nclass DragHandler {\n  constructor (el) {\n    el.remember('_draggable', this)\n    this.el = el\n\n    this.drag = this.drag.bind(this)\n    this.startDrag = this.startDrag.bind(this)\n    this.endDrag = this.endDrag.bind(this)\n  }\n\n  // Enables or disabled drag based on input\n  init (enabled) {\n    if (enabled) {\n      this.el.on('mousedown.drag', this.startDrag)\n      this.el.on('touchstart.drag', this.startDrag, { passive: false })\n    } else {\n      this.el.off('mousedown.drag')\n      this.el.off('touchstart.drag')\n    }\n  }\n\n  // Start dragging\n  startDrag (ev) {\n    const isMouse = !ev.type.indexOf('mouse')\n\n    // Check for left button\n    if (isMouse && ev.which !== 1 && ev.buttons !== 0) {\n      return\n    }\n\n    // Fire beforedrag event\n    if (this.el.dispatch('beforedrag', { event: ev, handler: this }).defaultPrevented) {\n      return\n    }\n\n    // Prevent browser drag behavior as soon as possible\n    ev.preventDefault()\n\n    // Prevent propagation to a parent that might also have dragging enabled\n    ev.stopPropagation()\n\n    // Make sure that start events are unbound so that one element\n    // is only dragged by one input only\n    this.init(false)\n\n    this.box = this.el.bbox()\n    this.lastClick = this.el.point(getCoordsFromEvent(ev))\n\n    const eventMove = (isMouse ? 'mousemove' : 'touchmove') + '.drag'\n    const eventEnd = (isMouse ? 'mouseup' : 'touchend') + '.drag'\n\n    // Bind drag and end events to window\n    on(window, eventMove, this.drag, this, { passive: false })\n    on(window, eventEnd, this.endDrag, this, { passive: false })\n\n    // Fire dragstart event\n    this.el.fire('dragstart', { event: ev, handler: this, box: this.box })\n  }\n\n  // While dragging\n  drag (ev) {\n    const { box, lastClick } = this\n\n    const currentClick = this.el.point(getCoordsFromEvent(ev))\n    const dx = currentClick.x - lastClick.x\n    const dy = currentClick.y - lastClick.y\n\n    if (!dx && !dy) return box\n\n    const x = box.x + dx\n    const y = box.y + dy\n    this.box = new Box(x, y, box.w, box.h)\n    this.lastClick = currentClick\n\n    if (\n      this.el.dispatch('dragmove', {\n        event: ev,\n        handler: this,\n        box: this.box\n      }).defaultPrevented\n    ) {\n      return\n    }\n\n    this.move(x, y)\n  }\n\n  move (x, y) {\n    // Svg elements bbox depends on their content even though they have\n    // x, y, width and height - strange!\n    // Thats why we handle them the same as groups\n    if (this.el.type === 'svg') {\n      G.prototype.move.call(this.el, x, y)\n    } else {\n      this.el.move(x, y)\n    }\n  }\n\n  endDrag (ev) {\n    // final drag\n    this.drag(ev)\n\n    // fire dragend event\n    this.el.fire('dragend', { event: ev, handler: this, box: this.box })\n\n    // unbind events\n    off(window, 'mousemove.drag')\n    off(window, 'touchmove.drag')\n    off(window, 'mouseup.drag')\n    off(window, 'touchend.drag')\n\n    // Rebind initial Events\n    this.init(true)\n  }\n}\n\nextend(Element, {\n  draggable (enable = true) {\n    const dragHandler = this.remember('_draggable') || new DragHandler(this)\n    dragHandler.init(enable)\n    return this\n  }\n})\n"],
  "mappings": "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",
  "names": ["getCoordsFromEvent", "ev", "changedTouches", "x", "clientX", "y", "clientY", "DragHandler", "el", "remember", "drag", "bind", "startDrag", "endDrag", "enabled", "on", "passive", "off", "isMouse", "type", "indexOf", "which", "buttons", "dispatch", "event", "handler", "defaultPrevented", "preventDefault", "stopPropagation", "init", "box", "bbox", "lastClick", "point", "eventMove", "eventEnd", "window", "fire", "currentClick", "dx", "dy", "Box", "w", "h", "move", "G", "prototype", "call", "extend", "Element", "draggable", "enable", "dragHandler"]
}
