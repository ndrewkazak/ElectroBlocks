{"version":3,"file":"svg.draggable.min.js","sources":["../node_modules/@babel/runtime/helpers/esm/createClass.js","../src/svg.draggable.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js"],"sourcesContent":["function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import { Box, Element, G, extend, off, on } from '@svgdotjs/svg.js'\n\nconst getCoordsFromEvent = ev => {\n  if (ev.changedTouches) {\n    ev = ev.changedTouches[0]\n  }\n  return { x: ev.clientX, y: ev.clientY }\n}\n\n// Creates handler, saves it\nclass DragHandler {\n  constructor (el) {\n    el.remember('_draggable', this)\n    this.el = el\n\n    this.drag = this.drag.bind(this)\n    this.startDrag = this.startDrag.bind(this)\n    this.endDrag = this.endDrag.bind(this)\n  }\n\n  // Enables or disabled drag based on input\n  init (enabled) {\n    if (enabled) {\n      this.el.on('mousedown.drag', this.startDrag)\n      this.el.on('touchstart.drag', this.startDrag, { passive: false })\n    } else {\n      this.el.off('mousedown.drag')\n      this.el.off('touchstart.drag')\n    }\n  }\n\n  // Start dragging\n  startDrag (ev) {\n    const isMouse = !ev.type.indexOf('mouse')\n\n    // Check for left button\n    if (isMouse && ev.which !== 1 && ev.buttons !== 0) {\n      return\n    }\n\n    // Fire beforedrag event\n    if (this.el.dispatch('beforedrag', { event: ev, handler: this }).defaultPrevented) {\n      return\n    }\n\n    // Prevent browser drag behavior as soon as possible\n    ev.preventDefault()\n\n    // Prevent propagation to a parent that might also have dragging enabled\n    ev.stopPropagation()\n\n    // Make sure that start events are unbound so that one element\n    // is only dragged by one input only\n    this.init(false)\n\n    this.box = this.el.bbox()\n    this.lastClick = this.el.point(getCoordsFromEvent(ev))\n\n    const eventMove = (isMouse ? 'mousemove' : 'touchmove') + '.drag'\n    const eventEnd = (isMouse ? 'mouseup' : 'touchend') + '.drag'\n\n    // Bind drag and end events to window\n    on(window, eventMove, this.drag, this, { passive: false })\n    on(window, eventEnd, this.endDrag, this, { passive: false })\n\n    // Fire dragstart event\n    this.el.fire('dragstart', { event: ev, handler: this, box: this.box })\n  }\n\n  // While dragging\n  drag (ev) {\n    const { box, lastClick } = this\n\n    const currentClick = this.el.point(getCoordsFromEvent(ev))\n    const dx = currentClick.x - lastClick.x\n    const dy = currentClick.y - lastClick.y\n\n    if (!dx && !dy) return box\n\n    const x = box.x + dx\n    const y = box.y + dy\n    this.box = new Box(x, y, box.w, box.h)\n    this.lastClick = currentClick\n\n    if (\n      this.el.dispatch('dragmove', {\n        event: ev,\n        handler: this,\n        box: this.box\n      }).defaultPrevented\n    ) {\n      return\n    }\n\n    this.move(x, y)\n  }\n\n  move (x, y) {\n    // Svg elements bbox depends on their content even though they have\n    // x, y, width and height - strange!\n    // Thats why we handle them the same as groups\n    if (this.el.type === 'svg') {\n      G.prototype.move.call(this.el, x, y)\n    } else {\n      this.el.move(x, y)\n    }\n  }\n\n  endDrag (ev) {\n    // final drag\n    this.drag(ev)\n\n    // fire dragend event\n    this.el.fire('dragend', { event: ev, handler: this, box: this.box })\n\n    // unbind events\n    off(window, 'mousemove.drag')\n    off(window, 'touchmove.drag')\n    off(window, 'mouseup.drag')\n    off(window, 'touchend.drag')\n\n    // Rebind initial Events\n    this.init(true)\n  }\n}\n\nextend(Element, {\n  draggable (enable = true) {\n    const dragHandler = this.remember('_draggable') || new DragHandler(this)\n    dragHandler.init(enable)\n    return this\n  }\n})\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}"],"names":["_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","getCoordsFromEvent","ev","x","changedTouches","clientX","y","clientY","DragHandler","el","this","TypeError","remember","drag","bind","startDrag","endDrag","Constructor","protoProps","staticProps","value","enabled","on","passive","off","eventEnd","isMouse","type","indexOf","which","buttons","dispatch","event","handler","defaultPrevented","preventDefault","stopPropagation","init","box","bbox","lastClick","point","window","fire","currentClick","dx","dy","Box","w","h","move","G","prototype","call","svg_js","extend","Element","draggable","enable"],"mappings":"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"}